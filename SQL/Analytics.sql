/* Analytics */

SELECT B.BOOK_NAME AS Title, COUNT(*) AS Times_Borrowed
FROM BORROWING BR
JOIN BOOKS B ON BR.BOOK_ID = B.BOOK_ID
GROUP BY B.BOOK_NAME
ORDER BY Times_Borrowed DESC;

SELECT 
  MONTH(RETURN_DATE) AS Month, 
  SUM(F.FINE_IMPOSED) AS Total_Fines
FROM BORROWING BR
JOIN FINE F ON BR.BORROW_ID = F.BORROW_ID
WHERE BR.RETURN_DATE IS NOT NULL
GROUP BY MONTH(RETURN_DATE)
ORDER BY Month;
--

SELECT M.MEMBER_TYPE, COUNT(BR.BORROW_ID) AS Total_Borrowed
FROM MEMBERS M
JOIN BORROWING BR ON M.MEMBER_ID = BR.MEMBER_ID
GROUP BY M.MEMBER_TYPE;
--
SELECT 
  M.MEMBER_TYPE,
  COUNT(*) AS Borrow_Count,
  ROUND((COUNT(*) * 100.0 / (SELECT COUNT(*) FROM BORROWING)), 2) AS Percentage
FROM BORROWING BR
JOIN MEMBERS M ON BR.MEMBER_ID = M.MEMBER_ID
GROUP BY M.MEMBER_TYPE;

--
SELECT 
  MEMBER_TYPE,
  COUNT(*) AS member_count,
  ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM MEMBERS), 2) AS percentage
FROM MEMBERS
GROUP BY MEMBER_TYPE;

--

SELECT 
  MONTHNAME(BORROW_DATE) AS borrow_month,
  COUNT(*) AS total_borrowings
FROM BORROWING
GROUP BY MONTH(BORROW_DATE), MONTHNAME(BORROW_DATE)
ORDER BY total_borrowings DESC;

--

SELECT 
  M.MEMBER_TYPE,
  SUM(F.FINE_IMPOSED) AS Total_Fine_Collected
FROM FINE F
JOIN BORROWING BR ON F.BORROW_ID = BR.BORROW_ID
JOIN MEMBERS M ON BR.MEMBER_ID = M.MEMBER_ID
GROUP BY M.MEMBER_TYPE;
