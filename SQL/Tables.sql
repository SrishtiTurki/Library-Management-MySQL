DROP DATABASE LIBRARY_MANAGEMENT;
CREATE DATABASE LIBRARY_MANAGEMENT;
USE LIBRARY_MANAGEMENT;

CREATE TABLE STAFF (
  STAFF_ID INT PRIMARY KEY,
  STAFF_NAME VARCHAR(50),
  STAFF_EMAIL VARCHAR(50),
  STATUS VARCHAR(50),
  START_DATE DATE,
  END_DATE DATE,
  DESIGNATION VARCHAR(50),
  EMP_TYPE VARCHAR(50)
);

CREATE TABLE MEMBERS (
  MEMBER_ID VARCHAR(50) PRIMARY KEY,
  MEMBER_NAME VARCHAR(50),
  MEMBER_EMAIL VARCHAR(100),
  MEMBER_TYPE VARCHAR(20), -- MEMBER or NON_MEMBER
  START_DATE DATE,
  END_DATE DATE
);

CREATE TABLE BOOKS (
  BOOK_ID INT PRIMARY KEY,
  BOOK_NAME VARCHAR(100),
  TOTAL_COPIES INT,
  AVAILABLE_COPIES INT,
  AUTHOR VARCHAR(100),
  GENRE VARCHAR(50)
);

CREATE TABLE BORROWING (
    BORROW_ID INT PRIMARY KEY,
    MEMBER_ID VARCHAR(10),
    BOOK_ID INT,
    BORROW_DATE DATE,
    DUE_DATE DATE,
    RETURN_DATE DATE
);


CREATE TABLE FINE (
  FINE_ID INT PRIMARY KEY AUTO_INCREMENT,
  BORROW_ID INT,
  MEMBER_ID VARCHAR(50),
  FINE_IMPOSED INT,
  PAID BOOLEAN,
  DAYS_OVERDUE INT,
  FOREIGN KEY (BORROW_ID) REFERENCES BORROWING(BORROW_ID)
);

CREATE TABLE MEMBER_ID_HISTORY (
  EMAIL VARCHAR(100),
  OLD_MEMBER_ID VARCHAR(50),
  TYPE VARCHAR(20)
);

CREATE TABLE RENEWAL_CHOICES (
  MEMBER_ID VARCHAR(50),
  MEMBER_TYPE VARCHAR(20),
  EMAIL VARCHAR(100),
  WANTS_RENEWAL BOOLEAN,
  RESPONSE_DATE DATE,
  MONEY_PAID INT
);


CREATE TABLE LOGIN_LOG (
    username VARCHAR(50),
    login_time DATETIME
);

CREATE TABLE SYSTEM_LOG (
    log_message TEXT,
    log_time DATETIME
);

